events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Upstream definitions
    upstream chopchop {
        server chopchop:3000 max_fails=3 fail_timeout=30s;
    }
    
    upstream admin {
        server admin:3000 max_fails=3 fail_timeout=30s;
    }
    
    upstream api {
        server api:4000 max_fails=3 fail_timeout=30s;
    }

    upstream menuverse {
        server menuverse:3000 max_fails=3 fail_timeout=30s;
    }

    upstream sqlite-api {
        server sqlite-api:5000 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;

    # Security headers map
    map $sent_http_content_type $cors_header {
        ~^application/json$ "*";
        default "";
    }

    # HTTP server (redirect to HTTPS)
    server {
        listen 80;
        server_name chopchop.com www.chopchop.com menuverse.com www.menuverse.com;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /usr/share/nginx/html;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name chopchop.com www.chopchop.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=*" always;

        # Chop Chop customer app (main)
        location / {
            limit_req zone=general burst=20 nodelay;
            
            proxy_pass http://chopchop;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Admin panel
        location /admin {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://admin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Remove /admin prefix when passing to backend
            rewrite ^/admin/(.*) /$1 break;
        }

        # GraphQL API endpoints
        location /api {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin $cors_header always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin '*';
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # SQLite API endpoints
        location /sqlite-api {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://sqlite-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Remove /sqlite-api prefix
            rewrite ^/sqlite-api/(.*) /$1 break;
        }

        # MenuVerse service
        location /menuverse {
            limit_req zone=general burst=15 nodelay;
            
            proxy_pass http://menuverse;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Remove /menuverse prefix
            rewrite ^/menuverse/(.*) /$1 break;
        }

        # Authentication endpoints (stricter rate limiting)
        location ~ ^/(api|sqlite-api)/(login|register|auth) {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static file uploads
        location /uploads {
            alias /usr/share/nginx/html/uploads;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Security for uploads
            location ~* \.(php|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Robots.txt
        location /robots.txt {
            alias /usr/share/nginx/html/robots.txt;
        }

        # Security - block common attack patterns
        location ~ /\. {
            deny all;
        }
        
        location ~ /(config|\.env|\.git) {
            deny all;
        }
    }

    # MenuVerse Restaurant Platform
    server {
        listen 443 ssl http2;
        server_name menuverse.com www.menuverse.com;

        # SSL Configuration (same as above)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # MenuVerse application
        location / {
            limit_req zone=general burst=20 nodelay;
            
            proxy_pass http://menuverse;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # API endpoints for MenuVerse
        location /api {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "MenuVerse healthy\n";
            add_header Content-Type text/plain;
        }
    }
}