"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/restaurant/[id]",{

/***/ "./lib/apolloClient.ts":
/*!*****************************!*\
  !*** ./lib/apolloClient.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/core/ApolloClient.js\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/link/http/HttpLink.js\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/cache/inmemory/inMemoryCache.js\");\n\n// Build endpoint robustly: prefer NEXT_PUBLIC_SERVER_URL, else default to localhost:4000\nconst base = (()=>{\n    const env = \"http://172.20.10.7:4000/\";\n    if (env && /^https?:\\/\\//i.test(env)) return env;\n    return \"http://localhost:4000\";\n})();\nconst client = new _apollo_client__WEBPACK_IMPORTED_MODULE_0__.ApolloClient({\n    link: new _apollo_client__WEBPACK_IMPORTED_MODULE_1__.HttpLink({\n        uri: base.replace(/\\/$/, \"\") + \"/graphql\"\n    }),\n    cache: new _apollo_client__WEBPACK_IMPORTED_MODULE_2__.InMemoryCache()\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (client);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvYXBvbGxvQ2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBdUU7QUFFdkUseUZBQXlGO0FBQ3pGLE1BQU1HLE9BQU8sQ0FBQztJQUNaLE1BQU1DLE1BQU1DLDBCQUFrQztJQUM5QyxJQUFJRCxPQUFPLGdCQUFnQkcsSUFBSSxDQUFDSCxNQUFNLE9BQU9BO0lBQzdDLE9BQU87QUFDVDtBQUVBLE1BQU1JLFNBQVMsSUFBSVIsd0RBQVlBLENBQUM7SUFDOUJTLE1BQU0sSUFBSVAsb0RBQVFBLENBQUM7UUFDakJRLEtBQUtQLEtBQUtRLE9BQU8sQ0FBQyxPQUFPLE1BQU07SUFDakM7SUFDQUMsT0FBTyxJQUFJWCx5REFBYUE7QUFDMUI7QUFFQSwrREFBZU8sTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvYXBvbGxvQ2xpZW50LnRzP2Y2MjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBvbGxvQ2xpZW50LCBJbk1lbW9yeUNhY2hlLCBIdHRwTGluayB9IGZyb20gJ0BhcG9sbG8vY2xpZW50JztcclxuXHJcbi8vIEJ1aWxkIGVuZHBvaW50IHJvYnVzdGx5OiBwcmVmZXIgTkVYVF9QVUJMSUNfU0VSVkVSX1VSTCwgZWxzZSBkZWZhdWx0IHRvIGxvY2FsaG9zdDo0MDAwXHJcbmNvbnN0IGJhc2UgPSAoKCkgPT4ge1xyXG4gIGNvbnN0IGVudiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NFUlZFUl9VUkw7XHJcbiAgaWYgKGVudiAmJiAvXmh0dHBzPzpcXC9cXC8vaS50ZXN0KGVudikpIHJldHVybiBlbnY7XHJcbiAgcmV0dXJuICdodHRwOi8vbG9jYWxob3N0OjQwMDAnO1xyXG59KSgpO1xyXG5cclxuY29uc3QgY2xpZW50ID0gbmV3IEFwb2xsb0NsaWVudCh7XHJcbiAgbGluazogbmV3IEh0dHBMaW5rKHtcclxuICAgIHVyaTogYmFzZS5yZXBsYWNlKC9cXC8kLywgJycpICsgJy9ncmFwaHFsJyxcclxuICB9KSxcclxuICBjYWNoZTogbmV3IEluTWVtb3J5Q2FjaGUoKSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGllbnQ7XHJcbiJdLCJuYW1lcyI6WyJBcG9sbG9DbGllbnQiLCJJbk1lbW9yeUNhY2hlIiwiSHR0cExpbmsiLCJiYXNlIiwiZW52IiwicHJvY2VzcyIsIk5FWFRfUFVCTElDX1NFUlZFUl9VUkwiLCJ0ZXN0IiwiY2xpZW50IiwibGluayIsInVyaSIsInJlcGxhY2UiLCJjYWNoZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/apolloClient.ts\n"));

/***/ })

});